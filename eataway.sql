/*CONECTADO A SQL PLUS*/

CONNECT / AS SYSDBA

ALTER SESSION SET "_ORACLE_SCRIPT"=true;

-- CREACIÓN DEL USUARIO
CREATE USER C##eataway IDENTIFIED BY sws2024;

-- ASIGNACIÓN DE PRIVILEGIOS AL USUARIO
GRANT CONNECT TO C##eataway;

GRANT ALL PRIVILEGES TO C##eataway;

-----------------------------------------------

-------------------------------------------------

--Creacón de las tablas

-- Tabla Categoría
CREATE TABLE Categoria (
    id_categoria NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tipo VARCHAR2(50) NOT NULL
);

-- Tabla Usuarios
CREATE TABLE Usuarios (
    id_usuario NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(50) NOT NULL,
    nombre VARCHAR2(50) NOT NULL,
    primer_apellido VARCHAR2(50) NOT NULL,
    segundo_apellido VARCHAR2(50),
    correo VARCHAR2(100) NOT NULL UNIQUE,
    password varchar(200) NOT NULL,
    foto VARCHAR2(255)
);

-- Tabla Locales
CREATE TABLE Locales (
    id_local NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    id_categoria NUMBER,  -- Relación con Categoría
    descripcion CLOB,
    FOREIGN KEY (id_categoria) REFERENCES Categoria(id_categoria)
);

-- Tabla Contactos
CREATE TABLE Contactos (
    id_contacto NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_local NUMBER,  -- Relación con Locales
    telefono VARCHAR2(20),
    email VARCHAR2(100),
    instagram VARCHAR2(100),
    FOREIGN KEY (id_local) REFERENCES Locales(id_local)
);

-- Tabla Reservas
CREATE TABLE Reservas (
    id_reserva NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario NUMBER,  -- Relación con Usuarios
    id_local NUMBER,  -- Relación con Locales
    fecha DATE NOT NULL,
    hora TIMESTAMP(0) NOT NULL,
    numero_personas NUMBER NOT NULL,
    descripcion CLOB,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario),
    FOREIGN KEY (id_local) REFERENCES Locales(id_local)
);

-- Tabla Reseñas
CREATE TABLE Resenas (
    id_resena NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario NUMBER,  -- Relación con Usuarios
    id_local NUMBER,  -- Relación con Locales
    calificacion NUMBER CHECK (calificacion BETWEEN 1 AND 5),
    comentario CLOB,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario),
    FOREIGN KEY (id_local) REFERENCES Locales(id_local)
);

-- Tabla Fotos
CREATE TABLE Fotos (
    id_foto NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_local NUMBER NOT NULL,  -- Relación con Locales
    ruta_foto VARCHAR2(255) NOT NULL,
    FOREIGN KEY (id_local) REFERENCES Locales(id_local),
    UNIQUE (id_local, id_foto)  -- Asegura combinaciones únicas de local y foto
);

-- Tabla Eventos Especiales
CREATE TABLE EventosEspeciales (
    id_evento NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_local NUMBER,  -- Relación con Locales
    nombre_evento VARCHAR2(100) NOT NULL,
    descripcion CLOB,
    fecha_evento DATE NOT NULL,
    hora_evento TIMESTAMP(0) NOT NULL,
    FOREIGN KEY (id_local) REFERENCES Locales(id_local)
);

-- Tabla Promociones
CREATE TABLE Promociones (
    id_promocion NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_local NUMBER,  -- Relación con Locales
    nombre VARCHAR2(100) NOT NULL,
    descripcion CLOB,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    estado VARCHAR2(50) DEFAULT 'Activa', -- Puede ser 'Activa', 'Expirada'
    FOREIGN KEY (id_local) REFERENCES Locales(id_local)
);

-- Tabla Ubicación
CREATE TABLE Ubicacion (
    id_ubicacion NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_local NUMBER NOT NULL,  -- Relación con Locales
    provincia VARCHAR2(50) NOT NULL,
    direccion VARCHAR2(255) NOT NULL,
    FOREIGN KEY (id_local) REFERENCES Locales(id_local),
    UNIQUE (id_local, id_ubicacion)  -- Asegura combinaciones únicas de local y ubicación
);

--------------------------------------------

--Inserts

-- Insertar en Categoría
INSERT INTO Categoria (tipo) VALUES ('Restaurante');
INSERT INTO Categoria (tipo) VALUES ('Bar');

-- Insertar en Usuarios
INSERT INTO Usuarios (username, nombre, primer_apellido, segundo_apellido, correo, password, foto) VALUES ('weny', 'Wendy', 'Badilla', 'Carvajal', 'wendybadilla40@gmail.com', '123', '');
INSERT INTO Usuarios (username, nombre, primer_apellido, segundo_apellido, correo, password, foto) VALUES ('ste', 'Steven', 'Chacon', 'Camacho', 'stchch06@gmail.com', '123', '');

-- Insertar en Locales
INSERT INTO Locales (nombre, id_categoria, descripcion) VALUES ('Zuntra', 1, 'Un pedacito de jungla de playa en Bº Escalante');
INSERT INTO Locales (nombre, id_categoria, descripcion) VALUES ('Ahumaditos', 2, 'La mejor calidad en platillos ahumados y a la parrilla');

-- Insertar en Contactos
INSERT INTO Contactos (id_local, telefono, email, instagram) VALUES (1, '70856984', 'zuntra@gmail.com', '@zuntracr');
INSERT INTO Contactos (id_local, telefono, email, instagram) VALUES (2, '71799808', 'ahumado@gmail.com', '@ahumadictoscr');

-- Insertar en Reservas
INSERT INTO Reservas (id_usuario, id_local, fecha, hora, numero_personas, descripcion) VALUES (1, 1, TO_DATE('2024-07-18', 'YYYY-MM-DD'), TO_TIMESTAMP('18-07-2024 19:00:00', 'DD-MM-YYYY HH24:MI:SS'), 4, 'Reserva para 4 personas');
INSERT INTO Reservas (id_usuario, id_local, fecha, hora, numero_personas, descripcion) VALUES (2, 2, TO_DATE('2024-07-19', 'YYYY-MM-DD'), TO_TIMESTAMP('19-07-2024 20:00:00', 'DD-MM-YYYY HH24:MI:SS'), 2, 'Reserva para 2 personas');

-- Insertar en Reseñas
INSERT INTO Resenas (id_usuario, id_local, calificacion, comentario) VALUES (1, 1, 5, 'Excelente servicio');
INSERT INTO Resenas (id_usuario, id_local, calificacion, comentario) VALUES (2, 2, 4, 'Muy buen lugar');

-- Insertar en Fotos
INSERT INTO Fotos (id_local, ruta_foto) VALUES (1, 'https://lh3.googleusercontent.com/p/AF1QipMrcbuz-ccUfjUWJtJ7Q545RtCdDSiiDPLgKcqk=s1360-w1360-h1020');
INSERT INTO Fotos (id_local, ruta_foto) VALUES (2, 'https://lh3.googleusercontent.com/p/AF1QipPR6U9O6l9P8Xo7vSs6n4ObgAllehEnVWyKxgQt=s1360-w1360-h1020');

-- Insertar en Eventos Especiales
INSERT INTO EventosEspeciales (id_local, nombre_evento, descripcion, fecha_evento, hora_evento) VALUES (1, 'Evento 1', 'Descripción del Evento 1', TO_DATE('2024-07-20', 'YYYY-MM-DD'), TO_TIMESTAMP('20-07-2024 18:00:00', 'DD-MM-YYYY HH24:MI:SS'));
INSERT INTO EventosEspeciales (id_local, nombre_evento, descripcion, fecha_evento, hora_evento) VALUES (2, 'Evento 2', 'Descripción del Evento 2', TO_DATE('2024-07-21', 'YYYY-MM-DD'), TO_TIMESTAMP('21-07-2024 19:00:00', 'DD-MM-YYYY HH24:MI:SS'));

-- Insertar en Promociones
INSERT INTO Promociones (id_local, nombre, descripcion, fecha_inicio, fecha_fin, estado) VALUES (1, 'Happy Hour', '2x1 en cocteles', TO_DATE('2024-07-01', 'YYYY-MM-DD'), TO_DATE('2024-07-31', 'YYYY-MM-DD'), 'Activa');
INSERT INTO Promociones (id_local, nombre, descripcion, fecha_inicio, fecha_fin, estado) VALUES (2, '10% Descuento', '10% de descuento al pagar con BN Tarjetas', TO_DATE('2024-07-01', 'YYYY-MM-DD'), TO_DATE('2024-07-15', 'YYYY-MM-DD'), 'Expirada');

-- Insertar en Ubicación
INSERT INTO Ubicacion (id_local, provincia, direccion) VALUES (1, 'San José', 'Av. 7, Barrio Escalante');
INSERT INTO Ubicacion (id_local, provincia, direccion) VALUES (2, 'Cartago', '1500 metros de la iglesia católica del barrio San José');

-----------------------------------

SELECT * FROM Ubicacion;
SELECT * FROM Categoria;
SELECT * FROM Usuarios;
SELECT * FROM Locales;
SELECT * FROM Contactos;
SELECT * FROM Reservas;
SELECT * FROM Resenas;
SELECT * FROM Fotos;
SELECT * FROM EventosEspeciales;
SELECT * FROM Promociones;

-------------------------------------

DROP TABLE Contactos CASCADE CONSTRAINTS;
DROP TABLE Reservas CASCADE CONSTRAINTS;
DROP TABLE Resenas CASCADE CONSTRAINTS;
DROP TABLE Fotos CASCADE CONSTRAINTS;
DROP TABLE EventosEspeciales CASCADE CONSTRAINTS;
DROP TABLE Promociones CASCADE CONSTRAINTS;
DROP TABLE Locales CASCADE CONSTRAINTS;
DROP TABLE Categoria CASCADE CONSTRAINTS;
DROP TABLE Usuarios CASCADE CONSTRAINTS;
DROP TABLE Ubicacion CASCADE CONSTRAINTS;

---------------------------------------------------

--SP para obtener todos los locales
CREATE OR REPLACE PROCEDURE C##eataway.ObtenerLocalesSP(p_cursor OUT SYS_REFCURSOR) AS
BEGIN
  OPEN p_cursor FOR
    SELECT l.id_local, l.nombre, l.id_categoria, l.descripcion, 
           c.tipo AS tipo, 
           (SELECT ruta_foto FROM C##eataway.Fotos f WHERE f.id_local = l.id_local AND ROWNUM = 1) AS foto
    FROM C##eataway.Locales l
    LEFT JOIN C##eataway.Categoria c ON l.id_categoria = c.id_categoria;
END;

CREATE OR REPLACE PACKAGE C##eataway.PCK_EATAWAY_LOCALES_OBTENER AS
  PROCEDURE ObtenerLocalesSP(p_cursor OUT SYS_REFCURSOR);
END PCK_EATAWAY_LOCALES_OBTENER;

CREATE OR REPLACE PACKAGE BODY C##eataway.PCK_EATAWAY_LOCALES_OBTENER AS
  PROCEDURE ObtenerLocalesSP(p_cursor OUT SYS_REFCURSOR) AS
  BEGIN
    OPEN p_cursor FOR
      SELECT l.id_local, l.nombre, l.id_categoria, l.descripcion, 
           c.tipo AS tipo, 
           (SELECT ruta_foto FROM C##eataway.Fotos f WHERE f.id_local = l.id_local AND ROWNUM = 1) AS foto
    FROM C##eataway.Locales l
    LEFT JOIN C##eataway.Categoria c ON l.id_categoria = c.id_categoria;
  END;
END PCK_EATAWAY_LOCALES_OBTENER;

DECLARE
  v_cursor SYS_REFCURSOR;
BEGIN
  C##eataway.PCK_EATAWAY_LOCALES_OBTENER.ObtenerLocalesSP(v_cursor);
END;

---------------------------------------------------